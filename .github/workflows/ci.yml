name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install dependencies
        run: make deps

      - name: Install golangci-lint
        run: make tools

      - name: Run linter
        run: make lint

  test-short:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install dependencies
        run: make deps

      - name: Run short tests
        run: make test-short

  test-integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_DB: resume_api_test
          POSTGRES_USER: dev
          POSTGRES_PASSWORD: devpass
          POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install dependencies
        run: make deps

      - name: Run migrations
        env:
          TEST_DB_HOST: localhost
          TEST_DB_PORT: 5433
          TEST_DB_NAME: resume_api_test
          TEST_DB_USER: dev
          TEST_DB_PASSWORD: devpass
          DATABASE_URL: postgres://dev:devpass@localhost:5433/resume_api_test?sslmode=disable
        run: go run ./cmd/migrate/main.go up

      - name: Run repository tests
        env:
          TEST_DB_HOST: localhost
          TEST_DB_PORT: 5433
          TEST_DB_NAME: resume_api_test
          TEST_DB_USER: dev
          TEST_DB_PASSWORD: devpass
        run: go test ./internal/repository/postgres/ -v -timeout=120s

      - name: Run integration tests
        env:
          TEST_DB_HOST: localhost
          TEST_DB_PORT: 5433
          TEST_DB_NAME: resume_api_test
          TEST_DB_USER: dev
          TEST_DB_PASSWORD: devpass
        run: go test ./internal/integration/... -v -timeout=120s

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test-short, test-integration]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install dependencies
        run: make deps

      - name: Build application
        run: make build

      - name: Build Docker image
        run: make docker-build

      # Uncomment the following steps if you want to push the Docker image to a registry
      # - name: Log in to Docker Hub
      #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}
      # 
      # - name: Push Docker image
      #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      #   run: |
      #     docker tag resume-api:latest username/resume-api:latest
      #     docker push username/resume-api:latest