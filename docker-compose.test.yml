version: '3.8'

services:
  # Test PostgreSQL database
  test-db:
    image: postgres:15-alpine
    container_name: resume-api-test-db
    environment:
      POSTGRES_DB: resume_api_test
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: devpass
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5433:5432"
    volumes:
      # Optional: persist data between runs (comment out for fresh DB each time)
      # - postgres_test_data:/var/lib/postgresql/data
      # Initialize with custom scripts if needed
      - ./scripts/init-test-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d resume_api_test"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - test-network

  # Optional: pgAdmin for database inspection during development
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: resume-api-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@test.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    depends_on:
      test-db:
        condition: service_healthy
    networks:
      - test-network
    profiles:
      - admin  # Only start with: docker-compose --profile admin up

networks:
  test-network:
    driver: bridge

# Uncomment to persist test data between runs
# volumes:
#   postgres_test_data: